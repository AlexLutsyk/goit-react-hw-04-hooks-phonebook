{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","reportWebVitals.js","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","target","value","className","s","form","preventDefault","formLabel","formInput","type","pattern","title","required","onChange","formButton","ContactList","contacts","onDelete","contactItemsList","map","id","contactItem","contactDelete","onClick","Filter","filter","filterInput","App","setContacts","setFilter","useEffect","localContacts","window","localStorage","getItem","parsedContacts","JSON","parse","firstRender","useRef","current","setItem","stringify","data","contact","shortid","generate","find","c","includes","alert","addContact","currentTarget","toLowerCaseFilter","toLowerCase","filterContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e153d41.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3_W8O\",\"formLabel\":\"ContactForm_formLabel__1scTO\",\"formInput\":\"ContactForm_formInput__2AaJL\",\"formButton\":\"ContactForm_formButton__19OAL\"};","import { useState } from \"react\";\r\n\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nexport default function ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit({ name, number });\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.formLabel}>\r\n        Name\r\n        <input\r\n          className={s.formInput}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n\r\n      <label className={s.formLabel}>\r\n        Number\r\n        <input\r\n          className={s.formInput}\r\n          type=\"text\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <button className={s.formButton} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import s from './ContactList.module.css';\r\n\r\nexport default function ContactList({ contacts, onDelete }) {\r\n  return (\r\n    <ul className={s.contactItemsList}>\r\n      {contacts.map(({ name, number, id }) => (\r\n        <li key={id} className={s.contactItem}>\r\n          <p>\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            type=\"button\"\r\n            className={s.contactDelete}\r\n            onClick={() => onDelete(id)}\r\n          >\r\n            Delete contact\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import s from \"./Filter.module.css\";\r\n\r\nexport default function Filter({ value, onChange }) {\r\n  return (\r\n    <div>\r\n      <label className={s.filter}>\r\n        <input\r\n          className={s.filterInput}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport { useState, useEffect, useRef } from \"react\";\n\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport shortid from \"shortid\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState([\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ]);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const localContacts = window.localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(localContacts);\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  const firstRender = useRef(true);\n\n  useEffect(() => {\n    if (firstRender.current) {\n      firstRender.current = false;\n      return;\n    }\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = ({ name, number }) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    const equalContact = contacts.find((c) => c.name.includes(name));\n\n    if (equalContact) {\n      alert(`${name} is already in contacts`);\n    } else {\n      setContacts((contacts) => [contact, ...contacts]);\n    }\n  };\n\n  const filterContacts = () => {\n    const toLowerCaseFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(toLowerCaseFilter)\n    );\n  };\n\n  const filterChange = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const onDelete = (id) => {\n    setContacts(contacts.filter((contact) => contact.id !== id));\n  };\n\n  const formSubmit = (data) => {\n    addContact(data);\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={formSubmit} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={filterChange} />\n      <ContactList contacts={filterContacts()} onDelete={onDelete} />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItemsList\":\"ContactList_contactItemsList__3zsLf\",\"contactItem\":\"ContactList_contactItem__jCxuk\",\"contactDelete\":\"ContactList_contactDelete__3KznH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3GoGT\",\"filterInput\":\"Filter_filterInput__16W2e\"};"],"sourceRoot":""}